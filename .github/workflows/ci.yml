name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-test-build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.15.1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
          cache: true

      - name: Check Rust formatting
        run: cargo fmt --all -- --check

      - name: Run Rust clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Check for unsafe code
        run: |
          # Check for actual unsafe Rust code blocks (not strings containing 'unsafe')
          ! grep -rE "^[[:space:]]*unsafe[[:space:]]*\{" --include="*.rs" packages/ || echo "::warning::Unsafe code blocks detected"
          ! grep -rE "unsafe[[:space:]]+fn" --include="*.rs" packages/ || echo "::warning::Unsafe functions detected"
          ! grep -rE "unsafe[[:space:]]+impl" --include="*.rs" packages/ || echo "::warning::Unsafe impl blocks detected"
          ! grep -rE "unsafe[[:space:]]+trait" --include="*.rs" packages/ || echo "::warning::Unsafe traits detected"

      - name: Run Rust tests
        run: cargo test --all --all-features

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Build all packages
        run: pnpm build